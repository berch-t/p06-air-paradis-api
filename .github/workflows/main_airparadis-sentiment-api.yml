name: Build and deploy to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: airparadis-sentiment-api
  PYTHON_VERSION: '3.9'
  RESOURCE_GROUP: 'p06-AirParadisResources'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Prepare deployment package
        run: |
          # Création des répertoires et fichiers essentiels
          mkdir -p models/bert
          mkdir -p logs
          
          # Création du fichier web.config
          echo '<?xml version="1.0" encoding="utf-8"?>' > web.config
          echo '<configuration>' >> web.config
          echo '  <system.webServer>' >> web.config
          echo '    <handlers>' >> web.config
          echo '      <add name="PythonHandler" path="*" verb="*" modules="httpPlatformHandler" resourceType="Unspecified"/>' >> web.config
          echo '    </handlers>' >> web.config
          echo '    <httpPlatform processPath="%home%\python\3.9\python.exe" arguments="-m gunicorn application:app --bind=0.0.0.0:%HTTP_PLATFORM_PORT% --timeout 600" requestTimeout="00:10:00" startupTimeLimit="600" startupRetryCount="5" stdoutLogEnabled="true" stdoutLogFile="\\?\%home%\LogFiles\stdout">' >> web.config
          echo '      <environmentVariables>' >> web.config
          echo '        <environmentVariable name="PYTHONUNBUFFERED" value="1"/>' >> web.config
          echo '        <environmentVariable name="PORT" value="%HTTP_PLATFORM_PORT%"/>' >> web.config
          echo '        <environmentVariable name="PYTHONPATH" value="%home%\site\wwwroot"/>' >> web.config
          echo '        <environmentVariable name="SIMULATION_MODE" value="true"/>' >> web.config
          echo '        <environmentVariable name="DOWNLOAD_MODELS_ON_STARTUP" value="true"/>' >> web.config
          echo '      </environmentVariables>' >> web.config
          echo '    </httpPlatform>' >> web.config
          echo '  </system.webServer>' >> web.config
          echo '</configuration>' >> web.config
          
          # Création du script startup.sh simplifié
          echo '#!/bin/bash' > startup.sh
          echo 'set -e' >> startup.sh
          echo 'export PYTHONUNBUFFERED=1' >> startup.sh
          echo 'export PORT=${PORT:-8000}' >> startup.sh
          echo 'export PYTHONPATH=$(pwd)' >> startup.sh
          echo 'mkdir -p logs' >> startup.sh
          echo 'mkdir -p models/bert' >> startup.sh
          echo 'python init_models.py >> logs/startup.log 2>&1 || true' >> startup.sh
          echo 'exec gunicorn --bind=0.0.0.0:$PORT --timeout 600 application:app' >> startup.sh
          chmod +x startup.sh
          
          # Créer un fichier minimal models/bert/config.json
          echo '{"max_sequence_length": 64, "batch_size": 8, "model_type": "distilbert-base-uncased"}' > models/bert/config.json

      - name: Create ZIP file
        run: zip -r release.zip ./* -x "venv/*"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-package
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-package

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8B426287F51640AAAFDF961D31747A8E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4AF4E359F9C647D1AE5FFEEA925F02A0 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_14C88AC40F4245B181EA617610E154CD }}

      - name: Reset App Service before deployment
        run: |
          echo "Réinitialisation de l'App Service avant déploiement..."
          az webapp stop --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}
          sleep 10
          az webapp start --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}
          sleep 20
          echo "App Service réinitialisé. Prêt pour le déploiement."

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          package: release.zip

      - name: Configure App Service
        run: |
          echo "Configuration des paramètres de l'App Service..."
          sleep 15
          az webapp config set --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --startup-file "startup.sh"
          echo "Configuration terminée."
          
      - name: Post-deployment info
        run: |
          echo "✅ Application déployée"
          echo "L'application va télécharger les modèles BERT au démarrage."
          echo "Pour vérifier l'état de l'application, consultez le portail Azure."